package com.hitechbunny;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by home on 4/18/16.
 */
public class Opening {
    private static List<String> player1 = new ArrayList<>();
    private static List<String> player2 = new ArrayList<>();

    static {
        add(1, "4152673");
        add(1, "4155362");
        add(1, "415644563232553344223455316677117722661177");
        add(1, "42224454673");
        add(1, "4363756166757752444");
        add(1, "436375633566554644513414161115322222277");
        add(1, "4364754364663344137611611222223217755");
        add(1, "436475453453656635422224522131311116677");
        add(1, "436475453552376433366664557472772212211");
        add(1, "436675357665533621772153322116225771144");
        add(1, "43676145573");
        add(1, "4367614665537");
        add(1, "436766444734131111222");
        add(1, "43676736434437764661174337115555115522");
        add(1, "444162573");
        add(1, "444334366246664633371557711757221722255");
        add(1, "4444416552521225415321566617777");
        add(1, "4444416555353246772776622227766111333");
        add(1, "444441655535324762333222366627557");
        add(1, "44444167631116646773333155322227527712655");
        add(1, "44444222242775557177313116666615133");
        add(1, "444442222666624612633357111113335555577777");
        add(1, "44444222266666224167377111337771313");
        add(1, "44444222266666224613311737337317117755555");
        add(1, "444442222666662247613775511131333");
        add(1, "4444422226666624121131113367777775533");
        add(1, "44444222266666241633333257115537775577511");
        add(1, "44444222266666264213311737713337117755555");
        add(1, "444442222666662642173337773337711155555");
        add(1, "4444422226666626473235551551333");
        add(1, "4444422227266664611776127177115353333");
        add(1, "44444222272715151115514326677663365757333");
        add(1, "4444422522134777122667115666655115533");
        add(1, "444443333145561222221355321155176666677");
        add(1, "44444333335661453166557222211662277");
        add(1, "44444333366154566663311755775751177122");
        add(1, "44444333366154566663375555711777711122");
        add(1, "44444333366156666453375555777771111122");
        add(1, "44444467666613333111131262222");
        add(1, "44444575772122242726666556515771111633333");
        add(1, "44444661533334566663311755557111777722");
        add(1, "4444466366477565575");
        add(1, "4444466661615353555114376222222771133");
        add(1, "444446666222242636331211133137777515555");
        add(1, "444446666222262426371133335531511155");
        add(1, "444446666226222546132777777111155555133");
        add(1, "44444752222325533426666667733755573711111");
        add(1, "44444752222666642655627771333333717111155");
        add(1, "4444475333352374731221211");
        add(1, "44451423333245341222265556116537777717166");
        add(1, "4447324421271615113");
        add(1, "45212122255363336544473");
        add(1, "4521222345445334362311111");
        add(1, "452126344422633242311");
        add(1, "45221331355633652672444");
        add(1, "452213322535531126666525111636377777744");
        add(1, "45221333344531555534446617777612222771166");
        add(1, "4523364544343342552");
        add(1, "452441424451511755567222772771166");
        add(1, "452441424451577576557773331111333222266");
        add(1, "45244213334453133711122271624777755");
        add(1, "45244213334453133711122276241777755");
        add(1, "45244213334453133711122462721777755");
        add(1, "45244213334453133711122467122777755");
        add(1, "45244213334453133711122677727472155");
        add(1, "45244213334453133711122762241777755");
        add(1, "45244213334453133711146222721777755");
        add(1, "452444133332145637555143122217177727566");
        add(1, "452513255322334644367666554246321111177");
        add(1, "4526312722354144313");
        add(1, "4527424425554731177515131");
        add(1, "452744217445551141551122262633666677");
        add(1, "46213524442264624666733337325555511");
        add(1, "46232242443447337323211");
        add(1, "46232522474435355");
        add(1, "4625445413326");
        add(1, "4713177551453411222");
        add(2, "42224454673");
        add(2, "4244442156562255541511112233");
        add(2, "424444216567576622261425335355633111137777");
        add(2, "4244445656216641116611772222333333777755");
        add(2, "4244562424421615525566116572677711773333");
        add(2, "4267456466574412255252411133257733776611");
    }

    public static void add(int player, String moves) {
        if (player == 1) {
            player1.add(moves);
        } else {
            player2.add(moves);
        }
    }

    public static Integer getMove(int player, String moves) {
        List<String> openings = player == 1 ? player1 : player2;
        for(String candidate : openings) {
            if (candidate.startsWith(moves) && candidate.length() > moves.length()) {
                int move = Integer.parseInt(candidate.substring(moves.length(), moves.length()+1));
                return move;
            }
        }

        return null;
    }
}
