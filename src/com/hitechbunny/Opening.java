package com.hitechbunny;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by home on 4/18/16.
 */
public class Opening {
    private static List<String> player1 = new ArrayList<>();
    private static List<String> player2 = new ArrayList<>();

    static {
add(1, "44451423333245341222265556116537777717166");
add(1, "44447612461711471555177666222625255373333");
add(1, "44447244222627556525533315111711777666633");
add(1, "444334366246664633371557711757221722255");
add(1, "444162573");
add(1, "4447324421271615113");
add(1, "444736215");
add(1, "444737251");
add(1, "444225231112133");
add(1, "444637251");
add(1, "45244241445151177572277212557613366");
add(1, "45244241445151177572277212557613333");
add(1, "452442414451511775722772125713353363366");
add(1, "45244241445151177572277716225513366");
add(1, "45244241445151177572277712265513366");
add(1, "45244241445151177572277711225563333");
add(1, "45244241445151177572277715152263366");
add(1, "45244241445151177572221772575163333");
add(1, "45244241445151177572221217556773333");
add(1, "45244241445157757655777221121213333");
add(1, "452442414451577576557772221111233333366");
add(1, "452442414451577576557773331111333222266");
add(1, "45244241445157757655777112221213333");
add(1, "452441424451577576557773331111333222266");
add(1, "452441424451511755567222772771166");
add(1, "452441424451511755527226121777666");
add(1, "452441424451511755517212226777666");
add(1, "4524414244551553323633673577766771212");
add(1, "45244413334235345556661222115312177777766");
add(1, "452513255322334644653546364662277777711");
add(1, "452513255322374215141");
add(1, "4527133346526");
add(1, "45221333344531555534446617777612222771166");
add(1, "452213322535536211666511135632677777744");
add(1, "45221331355633652672444");
add(1, "4522133537565163131211244");
add(1, "452126344422633242311");
add(1, "45212122255363336544473");
add(1, "4521222345445334362311111");
add(1, "4521234744532253362");
add(1, "4521275343442235362");
add(1, "4523364544343342552");
add(1, "452641446556363521232");
add(1, "45264744515734362");
add(1, "4526424423266551533");
add(1, "436475436466334462236372772221717111155");
add(1, "436475436642264431355");
add(1, "436475453453656635422224522131311116677");
add(1, "436475453552376433366664557472772212211");
add(1, "4363756166757752444");
add(1, "4363756166773745445");
add(1, "436375633566554644513414161115322222277");
add(1, "436375633566554544441112221663112225377");
add(1, "436375656643344554456653312771777111122222");
add(1, "43637567663551444");
add(1, "43637566565562222414");
add(1, "436675357665533621772153322116225771144");
add(1, "4367614665537");
add(1, "43676145573");
add(1, "436766444734377641116171122");
add(1, "436766444734377171116161426222227333555");
add(1, "436766425644537");
add(1, "4367676664433223232241411");
add(1, "436763364344726226131112171324472776555");
add(1, "43654132251");
add(1, "436135544656525");
add(1, "43626357325147434");
add(1, "4737251");
add(1, "4737215");
add(1, "4733562");
add(1, "4731526");
add(1, "47353612243325454");
add(1, "4735351233566511171513224");
add(1, "473533475144366");
add(1, "4736251");
add(1, "473233426556434");
add(1, "4732343345422416111");
add(1, "4734526");
add(1, "4266573");
add(1, "4266537");
add(1, "426753646643233553144521552231411126677");
add(1, "4267536466442336355");
add(1, "426753655466453346446552332");
add(1, "4267536351667455433");
add(1, "4263454451326");
add(1, "42634127312422553");
add(1, "4261537");
add(1, "4264573");
add(1, "4265644566534755363");
add(1, "42656266422447574554333333526");
add(1, "4262537");
add(1, "4623224244344755311");
add(1, "46232242443447553366611");
add(1, "46232522474435355");
add(1, "46232122314444671166263336472773771155");
add(1, "46213524442264624666733337325555511");
add(1, "4625445413326");
add(1, "4625414452615277677");
add(1, "4625454431525332666");
add(1, "4622315");
add(1, "4622351");
add(1, "4627315");
add(1, "4627351");
add(1, "4626351");
add(1, "4626315");
add(1, "4624351");
add(1, "4624315");
add(1, "4133526");
add(1, "4133562");
add(1, "41364244323322111");
add(1, "4134526");
add(2, "433344447636664636755311111122222255775577");
add(2, "433344443554535535771111772266117722226666");
add(2, "433344443554535535111171717722667722226666");
add(2, "433344341447733111112525222525");
add(2, "433337444435543522251777122266661166117755");
add(2, "43333744144111341355571777762266255522266");
add(2, "4333371444455655551436613111222");
add(2, "4376634337144647114215131366677722");
add(2, "4376634337144647114215131366677755");
add(2, "4376634337144647114215131366767722");
add(2, "4376634337144647114215661363177722");
add(2, "4376634337144647114215661313677722");
add(2, "4376634337144647114215661331677722");
add(2, "4376634337144647114237751166613722");
add(2, "437663433766773444436752671222112112155");
add(2, "43766343376677344443672221211");
add(2, "4376634337667734444367627221211");
add(2, "43766343376677344443527221211");
add(2, "43766343376677344443725221211");
add(2, "43444434755755666656363331517777");
add(2, "43444434755755666656363331512277221177");
add(2, "434444347557556666563633537777");
add(2, "4344443475575555133111771122666626262233");
add(2, "434444347557551111337722277222666666551133");
add(2, "434444347557551133117755666611337766");
add(2, "4344443475575533112222227733116667766611");
add(2, "4344443475575533117755112221666612227766");
add(2, "434444347557331122221122557766677116663355");
add(2, "434444347557331155111177556666222223237766");
add(2, "434444347557331155776663361155222222117766");
add(2, "434444347557335577222222111166677515166633");
add(2, "434444347557335511112222227766671571566633");
add(2, "434444347557335511112222772266677516616533");
add(2, "4344443475573355111177666776512225123322");
add(2, "4344443475573355117711666776552221122233");
add(2, "4344443475573355551177666611222112337766");
add(2, "4344443475571133115533777766666622221122");
add(2, "4344443475571133551177222772336666551122");
add(2, "4344443466663333151511777557226622227711");
add(2, "434444341366665756222313321121717762555577");
add(2, "43444413343375116513565766712217667722");
add(2, "4344447534557351137733111177666655222222");
add(2, "436744433233421131211241522567777755");
add(2, "436744433233421131211241525267777755");
add(2, "436744433242331131211241522567777755");
add(2, "436744433264771233314171117722225555");
add(2, "4367444323364346222122635655");
add(2, "43676736434437764661174337115555115522");
add(2, "43676736434437764661413111555531775522");
add(2, "4367673634334264743417771111122");
add(2, "4367676664433223232241411");
add(2, "43676766644342277333447131515");
add(2, "43676766644342277333447171515");
add(2, "436767667447733342214423211");
add(2, "436767667447733342214423212");
add(2, "43676766744773333221211");
add(2, "4367676674477342254431315");
add(2, "436767667447436225113");
add(2, "4367676674474344322131515");
add(2, "4367676674473331515");
add(2, "436767667447333111111222224");
add(2, "436767661443322431515");
add(2, "436767663373347441111112322");
add(2, "436767443433437437176666272111551122");
add(2, "436767443433437437176666271211551122");
add(2, "436767443433437437171711115522555522");
add(2, "436767443433437437171711551122555522");
add(2, "436767443433437437171711552255115522");
add(2, "43676776644334443673557761315111515522");
add(2, "43676776644334443673115577615111355522");
add(2, "43676776644334443655617133771111555522");
add(2, "43676776644334443655613371775111155522");
add(2, "43676776644334443663375571517111155522");
add(2, "43676776644334443663371171711155555522");
add(2, "43676776644334443633556171771151515522");
add(2, "4367677664333443464512111113677755");
add(2, "436733444464555566661111112255777233322277");
add(2, "4314431337311344411262767677766655");
add(2, "4314431337311344416271727776666655");
add(2, "4314431337311344555171722455777566");
add(2, "4314436337646614111132246362222777555");
add(2, "5546544452626313");

}

    public static void add(int player, String moves) {
        if (player == 1) {
            player1.add(moves);
        } else {
            player2.add(moves);
        }
    }

    public static Integer getMove(int player, String moves) {
        List<String> openings = player == 1 ? player1 : player2;
        for(String candidate : openings) {
            if (candidate.startsWith(moves) && candidate.length() > moves.length()) {
                int move = Integer.parseInt(candidate.substring(moves.length(), moves.length()+1));
                return move;
            }
        }

        return null;
    }
}
